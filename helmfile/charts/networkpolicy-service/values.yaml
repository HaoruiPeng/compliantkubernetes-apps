additional: {}
# |-
#   kind: NetworkPolicy
#   apiVersion: networking.k8s.io/v1
#   metadata:
#     name: example-np
#     namespace: default
#   spec:
#     policyTypes:
#       - Ingress
#       - Egress
#     podSelector:
#       matchLabels:
#         foo: bar
#     ingress: {}
#     egress: {}
global:
  scApiserver:
    ips:
      - "0.0.0.0/0"
    port: 6443
  scNodes:
    ips:
      - "0.0.0.0/0"
  scIngress:
    ips:
      - "0.0.0.0/0"
  wcIngress:
    ips:
      - "0.0.0.0/0"
  objectStorage:
    ips:
      - "0.0.0.0/0"
    ports:
      - 443
  ingressUsingHostNetwork: false
  externalLoadBalancer: false # not true if loadbalancer is controlled by a kubernetes cloud controller

harbor:
  enabled: true
  database:
    type: internal
    internal: []
      # - ingressNSMatchLabels: {}
      #   ingressPodMatchLabels: {}
    external: []
      # - egressNSMatchLabels:
      #     kubernetes.io/metadata.name: <postgres namespace>
      #   egressPodMatchLabels: {}
      #   ports:
      #    - 5432
  jobservice:
    # IP to pull images, docker hub etc
    ips:
      - "0.0.0.0/0"
    ports:
      - 443
  redis:
    type: internal
    external: []
      # - egressNSMatchLabels:
      #     kubernetes.io/metadata.name: <redis namespace>
      #   egressPodMatchLabels: {}
      #   ports:
      #    - 6379
  trivy:
    # IP to trivy vulnerability database
    ips:
      - "0.0.0.0/0"
    port: 443

monitoring:
  enabled: true
  grafana:
    externalDashboardProvider: # loading dashboards from grafana website
      ips:
        - "0.0.0.0/0"
      ports:
        - 443
  alertmanager:
    alertReceivers: # alert receiver, e.g. slack or opsgenie
      ips:
        - "0.0.0.0/0"
      ports:
        - 443
opensearch:
  enabled: true
  plugins:
    ips:
      - "0.0.0.0/0"
    port: 443

fluentd:
  enabled: true

rcloneSync:
  enabled: true
  destinationObjectStorage:
    ips:
      - "0.0.0.0/0"
    ports:
      - 443
